version: '3.7'

services:
  traefik:
    image: traefik:v2.2
    command:
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.adminer.address=:8080
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
      ## RHDWP: API ##
      # - --api.dashboard=true
      ## RHDWP: API end ##
      - --certificatesresolvers.cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesresolvers.cloudflare.acme.storage=acme.json
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.http.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesresolvers.http.acme.storage=acme.json
      - --certificatesresolvers.http.acme.httpchallenge.entrypoint=http
      ## RHDWP: Cert staging ##
      # - --certificatesresolvers.cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      # - --certificatesresolvers.http.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      ## RHDWP: Cert staging end ##
      ## Logging
      - --log.level=ERROR
    environment:
      FQDN: "${FQDN}"
      CLOUDFLARE_EMAIL: "${CLOUDFLARE_EMAIL}"
      CLOUDFLARE_API_KEY: "${CLOUDFLARE_API_KEY}"
      MG_API_KEY: "${MG_API_KEY}"
      DEV_SMTP_LOGIN: "${DEV_SMTP_LOGIN:-}"
      DEV_SMTP_PASS: "${DEV_SMTP_PASS:-}"
      DEV_SMTP_FROM: "${DEV_SMTP_FROM:-}"
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/letsencrypt/acme.json:/acme.json
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    ## RHDWP: useLabels ##
    #   labels:
    ## RHDWP: useLabels end ##
    ## RHDWP: API ##
    #     - "traefik.enable=true"
    #     - "traefik.http.routers.api.entrypoints=http"
    #     - "traefik.http.routers.api.rule=Host(`traefik.${FQDN}`)"
    #     - "traefik.http.middlewares.api-https-redirect.redirectscheme.scheme=https"
    #     - "traefik.http.routers.api-https.entrypoints=https"
    #     - "traefik.http.routers.api-https.tls=true"
    #     - "traefik.http.routers.api-https.tls.certresolver=cloudflare"
    #     - "traefik.http.routers.api-https.tls.domains[0].main=${FQDN}"
    #     - "traefik.http.routers.api-https.tls.domains[0].sans=traefik.${FQDN},portainer.${FQDN}"
    #     - "traefik.http.routers.api-https.middlewares=api-auth"
    #     - "traefik.http.routers.api-https.rule=Host(`traefik.${FQDN}`)"
    #     - "traefik.http.middlewares.api-auth.basicauth.users=admin:$$2y$$05$$7t25C0myBoWErPjCUsEDPe/TKLjdiywW4HchSJiKNmK5nZk2saVLW"
    #     - "traefik.http.routers.api.middlewares=api-https-redirect"
    #     - "traefik.http.routers.api-https.service=api@internal"
    #     - "traefik.http.services.api-https.loadbalancer.server.port=80"
    ## RHDWP: API end ##
    ## RHDWP: Buffering ##
    #     - "traefik.https.middlewares.limit.buffering.maxRequestBodyBytes=4000000000"
    #     - "traefik.https.middlewares.limit.buffering.memRequestBodyBytes=4000000000"
    #     - "traefik.https.middlewares.limit.buffering.maxResponseBodyBytes=4000000000"
    #     - "traefik.https.middlewares.limit.buffering.retryExpression=IsNetworkError() && Attempts() < 2"
    ## RHDWP: Buffering end ##

  ## RHDWP: Adminer ##
  # adminer:
  #   image: adminer
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=mysql
  #     - ADMINER_DESIGN=nicu
  #   networks:
  #     - %%project_label%%_internal
  #   ports:
  #     - 8080:8080
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.adminer.entrypoints=adminer"
  #     - "traefik.http.routers.adminer.rule=Host(`${FQDN}`)"
  ## RHDWP: Adminer end ##

networks:
  internal:
    driver: overlay
    name: internal
  proxy:
    driver: overlay
    name: proxy
  ## RHDWP: Adminer ##
  # %%project_label%%_internal:
  #   external: true
  ## RHDWP: Adminer end ##
